sudo: false
dist: trusty
language: php

notifications:
  email:
    on_success: never
    on_failure: change

branches:
  only:
    - master

cache:
  - composer
  - $HOME/.composer/cache

matrix:
  fast_finish: true
  include:
    - php: 7.0
      env: SNIFF=1
    - php: 7.2
      env: WP_VERSION=latest
    - php: 7.1
      env: WP_VERSION=latest WP_MULTISITE=1
    - php: 5.6
      env: WP_VERSION=latest
    - php: 5.6
      env: WP_VERSION=4.1
    - php: 7.3
      env: WP_VERSION=trunk

  allow_failures:
    # Allow failures for unstable builds.
    - php: nightly
    - env: WP_VERSION=master
    - env: SNIFF=1

before_script:
  - export PHPCS_DIR=/tmp/phpcs
  - export SNIFFS_DIR=/tmp/sniffs

  - |
    # Export Composer's global bin dir to PATH, but not on PHP 5.2:
    composer config --list --global
    export PATH=`composer config --list --global | grep '\[home\]' | { read a; echo "${a#* }/vendor/bin:$PHPCS_DIR/bin:$PATH"; }`

  - |
    if [[ ! -z "$WP_VERSION" ]] ; then
      bash bin/install-wp-tests.sh wordpress_test root '' localhost $WP_VERSION

    case "$TRAVIS_PHP_VERSION" in
      7.4snapshot|7.3|7.2|7.1|nightly)
        echo "Using PHPUnit 7.x"
        travis_retry composer global require "phpunit/phpunit:^7"
        ;;
      7.0)
        echo "Using PHPUnit 6.x"
        travis_retry composer global require "phpunit/phpunit:^6"
        ;;
      5.6)
        echo "Using PHPUnit 5.x"
        travis_retry composer global require "phpunit/phpunit:^5"
        ;;
      *)
        echo "No PHPUnit version handling for PHP version $TRAVIS_PHP_VERSION"
        exit 1
        ;;
    esac

    fi

  - which phpunit
  - phpunit --version
  - mysql --version
  - phpenv versions
  - php --version

  # Install PHP_CodeSniffer.
  - if [[ "$SNIFF" == "1" ]]; then git clone -b master --depth 1 https://github.com/squizlabs/PHP_CodeSniffer.git $PHPCS_DIR; fi
  # Install WordPress Coding Standards.
  - if [[ "$SNIFF" == "1" ]]; then git clone -b master --depth 1 https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards.git $SNIFFS_DIR; fi
  # Set install path for WordPress Coding Standards.
  - if [[ "$SNIFF" == "1" ]]; then $PHPCS_DIR/bin/phpcs --config-set installed_paths $SNIFFS_DIR; fi
  - if [[ "$SNIFF" == "1" ]]; then phpcs -i; fi
  # After CodeSniffer install you should refresh your path.
  - if [[ "$SNIFF" == "1" ]]; then phpenv rehash; fi

script:
  - |
    if [[ ! -z "$WP_VERSION" ]] ; then
      phpunit
    fi
  - |
    if [[ "$SNIFF" == "1" ]] ; then
      $PHPCS_DIR/bin/phpcs -p -v -s --standard=phpcs.ruleset.xml $(find . -name '*.php')
    fi
