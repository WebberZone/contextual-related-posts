sudo: false

language: php

notifications:
  email:
    on_success: never
    on_failure: change

branches:
  only:
    - master

cache:
  - composer
  - $HOME/.composer/cache

matrix:
  fast_finish: true
  include:
    - php: hhvm
      env: WP_VERSION=latest
    - php: 7.1
      env: WP_VERSION=latest
    - php: 7.1
      env: WP_VERSION=latest WP_MULTISITE=1
    - php: 7.0
      env: WP_VERSION=latest
    - php: 5.6
      env: WP_VERSION=4.0
    - php: 5.6
      env: WP_VERSION=latest
    - php: 5.6
      env: WP_VERSION=trunk
    - php: 5.6
      env: SNIFF=1
    - php: 5.3
      env: WP_VERSION=latest
    - php: 5.3
      env: WP_VERSION=latest WP_MULTISITE=1

  allow_failures:
    # Allow failures for unstable builds.
    - php: nightly
    - php: hhvm
    - env: WP_VERSION=master
    - env: SNIFF=1

before_script:
  - export PATH="$HOME/.composer/vendor/bin:$PATH"
  - |
    if [[ ! -z "$WP_VERSION" ]] ; then
      bash bin/install-wp-tests.sh wordpress_test root '' localhost $WP_VERSION
      if [[ ${TRAVIS_PHP_VERSION:0:2} == "7." ]]; then
        composer global require "phpunit/phpunit=5.7.*"
      else
        composer global require "phpunit/phpunit=4.8.*"
      fi
    fi
 # - |
 #   if [[ "$SNIFF" == "phpcs" ]] ; then
 #     composer global require wp-coding-standards/wpcs
 #     phpcs --config-set installed_paths $HOME/.composer/vendor/wp-coding-standards/wpcs
 #   fi

  - export PHPCS_DIR=/tmp/phpcs
  - export SNIFFS_DIR=/tmp/sniffs
  # Install CodeSniffer for WordPress Coding Standards checks.
  - if [[ "$SNIFF" == "1" ]]; then git clone -b master --depth 1 https://github.com/squizlabs/PHP_CodeSniffer.git $PHPCS_DIR; fi
  # Install WordPress Coding Standards.
  - if [[ "$SNIFF" == "1" ]]; then git clone -b master --depth 1 https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards.git $SNIFFS_DIR; fi
  # Install PHP Compatibility sniffs.
  - if [[ "$SNIFF" == "1" ]]; then git clone -b master --depth 1 https://github.com/wimg/PHPCompatibility.git $SNIFFS_DIR/PHPCompatibility; fi
  # Set install path for PHPCS sniffs.
  # @link https://github.com/squizlabs/PHP_CodeSniffer/blob/4237c2fc98cc838730b76ee9cee316f99286a2a7/CodeSniffer.php#L1941
  - if [[ "$SNIFF" == "1" ]]; then $PHPCS_DIR/scripts/phpcs --config-set installed_paths $SNIFFS_DIR; fi
  # After CodeSniffer install you should refresh your path.
  - if [[ "$SNIFF" == "1" ]]; then phpenv rehash; fi
  # Install JSCS: JavaScript Code Style checker.
  # @link http://jscs.info/
  - if [[ "$SNIFF" == "1" ]]; then npm install -g jscs; fi
  # Install JSHint, a JavaScript Code Quality Tool.
  # @link http://jshint.com/docs/
  - if [[ "$SNIFF" == "1" ]]; then npm install -g jshint; fi
  # Pull in the WP Core jshint rules.
  - if [[ "$SNIFF" == "1" ]]; then wget https://develop.svn.wordpress.org/trunk/.jshintrc; fi

script:
  - |
    if [[ ! -z "$WP_VERSION" ]] ; then
      phpunit
      WP_MULTISITE=1 phpunit
    fi
  - |
    if [[ "$SNIFF" == "1" ]] ; then
      $PHPCS_DIR/scripts/phpcs -p -s -v -n . --standard=./phpcs.ruleset.xml --extensions=php
    fi

  # Run through JSHint.
  - if [[ "$SNIFF" == "1" ]]; then jshint .; fi
  # Run through JavaScript Code Style checker.
  - if [[ "$SNIFF" == "1" ]]; then jscs .; fi

addons:
    code_climate:
        repo_token: 551ca5ac256e8b26dad480c964ce692d6e28afbf97c34994c0ef84e3d9cfc65c
